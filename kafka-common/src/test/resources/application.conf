# Properties for akka.kafka.ProducerSettings can be
# defined in this section or a configuration section with
# the same layout.
akka.kafka {
  producer {
    # Config path of Akka Discovery method
    # "akka.discovery" to use the Akka Discovery method configured for the ActorSystem
    discovery-method = akka.discovery

    # Set a service name for use with Akka Discovery
    # https://doc.akka.io/docs/alpakka-kafka/current/discovery.html
    service-name = ""

    # Timeout for getting a reply from the discovery-method lookup
    resolve-timeout = 3 seconds

    # Tuning parameter of how many sends that can run in parallel.
    # In 2.0.0: changed the default from 100 to 10000
    parallelism = 10000

    # Duration to wait for `KafkaProducer.close` to finish.
    close-timeout = 60s

    # Call `KafkaProducer.close` when the stream is shutdown. This is important to override to false
    # when the producer instance is shared across multiple producer stages.
    close-on-producer-stop = true

    # Fully qualified config path which holds the dispatcher configuration
    # to be used by the producer stages. Some blocking may occur.
    # When this value is empty, the dispatcher configured for the stream
    # will be used.
    use-dispatcher = "akka.kafka.default-dispatcher"

    # The time interval to commit a transaction when using the `Transactional.sink` or `Transactional.flow`
    # for exactly-once-semantics processing.
    eos-commit-interval = 100ms

    # Properties defined by org.apache.kafka.clients.producer.ProducerConfig
    # can be defined in this configuration section.
    kafka-clients {
    }
  }

  testkit.testcontainers {

    # define these settings to select a different Kafka/ZooKeeper docker image
    # we recommend using Confluent Platform docker images and using the same version across all images
    # Confluent publishes images on DockerHub: https://hub.docker.com/r/confluentinc/cp-kafka/tags
    # Kafka versions in Confluent Platform: https://docs.confluent.io/current/installation/versions-interoperability.html
    zookeeper-image = "confluentinc/cp-zookeeper"
    zookeeper-image-tag = ${akka.kafka.testkit.testcontainers.confluent-platform-version}
    kafka-image = "confluentinc/cp-kafka"
    kafka-image-tag = ${akka.kafka.testkit.testcontainers.confluent-platform-version}
    schema-registry-image = "confluentinc/cp-schema-registry"
    schema-registry-image-tag = ${akka.kafka.testkit.testcontainers.confluent-platform-version}
    # See https://docs.confluent.io/platform/current/installation/versions-interoperability.html
    confluent-platform-version = "7.0.0"

    # the number of Kafka brokers to include in a test cluster
    num-brokers = 1

    # set this to use a replication factor for internal Kafka topics such as Consumer Offsets and Transaction log.
    # this replication factor must be less than or equal to `num-brokers`
    internal-topics-replication-factor = 1

    # set this to true to launch a testcontainer for Confluent Schema Registry
    use-schema-registry = false

    # set this to true to stream the STDOUT and STDERR of containers to SLF4J loggers
    # this requires the SLF4J dependency to be on the classpath and the loggers enabled in your logging configuration
    container-logging = false

    # set this to the total length of time to wait for a Kafka container cluster to start. this includes all brokers
    # zookeeper, and schema registry nodes. note that this can take a considerable time in limited resource environments.
    cluster-start-timeout = 360 s

    # set this to the total length of time to wait for a Kafka container readiness check to complete. note that this can
    # take a considerable time in limited resource environments.
    readiness-check-timeout = 360 s
  }
}