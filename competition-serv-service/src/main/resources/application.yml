#Profiles:
#el-zookeeper: manual leader election with zookeeper
#el-curator: leader election with curator's recipe
#dev - developer's profile (for test instances of zookeeper and kafka)
spring:
  datasource:
    url: ${POSTGRES_URL:jdbc:postgresql://localhost:5432/postgres?serverTimezone=UTC}
    username: ${POSTGRES_USERNAME:postgres}
    password: ${POSTGRES_PASSWORD:admin}
    driver-class-name: org.postgresql.Driver
  cache:
    ehcache:
      config: classpath:ehcache.xml
#  jpa:
#    hibernate:
#      ddl-auto: validate
#    properties:
#      javax:
#        persistence:
#          sharedCache:
#            mode: ALL
#      hibernate:
#        dialect: org.hibernate.dialect.PostgreSQL95Dialect
##        generate_statistics: true
#        order_inserts: true
#        order_updates: true
#        jdbc:
#          batch_size: 60
#          batch_versioned_data: true
#        javax:
#          cache:
#            provider: org.ehcache.jsr107.EhcacheCachingProvider
#            missing_cache_strategy: create
#        cache:
#          use_second_level_cache: true
#          use_query_cache: true
#          region:
#            factory_class: org.hibernate.cache.jcache.JCacheRegionFactory
#        event:
#          merge:
#            entity_copy_observer: allow
  jackson:
    default-property-inclusion: non_null
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false
      FAIL_ON_EMPTY_BEANS: false
    deserialization:
      FAIL_ON_UNKNOWN_PROPERTIES: false
      READ_UNKNOWN_ENUM_VALUES_AS_NULL: true
    visibility:
      ALL: any
  kafka:
    admin:
      client-id: "competition-service-admin"
    bootstrap-servers: ${kafka.bootstrap-servers}
    consumer:
      group-id: compserv_consumer
      enable-auto-commit: false
      auto-offset-reset: earliest
      properties:
        isolation:
          level: read_committed
    producer:
      properties:
        acks: "all"
        retries: 3
        batch.size: 16384
        linger.ms: 1
        buffer.memory: 33554432
        key.serializer: org.apache.kafka.common.serialization.StringSerializer
        value.serializer: org.apache.kafka.common.serialization.StringSerializer
      transaction-id-prefix: tx-
  flyway:
    enabled: true

server:
  servlet.context-path: /competitions
  port: ${SERVER_PORT:3082}
  max-http-header-size: 20000

cluster:
  enable-cluster: true
  advertised-port: ${ADVERTISED_PORT:60390}
  advertised-host: ${ADVERTISED_HOST:localhost}
  cluster-seed: ${CLUSTER_SEED:localhost:60391}


kafka:
  bootstrap-servers: ${BOOTSTRAP_SERVERS:localhost:61383}
  default-topic-options:
    partitions: 4
    replication-factor: 1


management:
  endpoints.web.exposure.include: '*'
  server:
    port: 9001
