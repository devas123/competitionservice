version: '3.8'
services:
  query_service:
    image: query-processor:latest
    environment:
      - KAFKA_BROKERS=broker:29092
      - MONGO_DB_HOST=mongo
      - MONGO_DB_PORT=27017
    networks:
      compsrv_backend:
    deploy:
        restart_policy:
          condition: on-failure
    depends_on:
      - cassandra
      - broker
    ports:
      - "9000:9000"


  gateway_service:
    image: gateway-service:latest
    environment:
      - KAFKA_BROKERS=broker:29092
    networks:
      compsrv_backend:
    depends_on:
      - broker
    ports:
      - "8080:8080"


  command_processor:
    image: command-processor:latest
    environment:
      - DATABASE_PATH=/app/app-db/command-processor
      - KAFKA_BROKERS=broker:29092
    volumes:
      - command_processor_db:/app/app-db/command-processor
    networks:
      compsrv_backend:
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      - broker


  mongo:
    image: mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - query_processor_db:/data/db

  mongo-express:
    image: mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/

  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      compsrv_backend:


  broker:
    image: confluentinc/cp-server:6.2.1
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
    networks:
      compsrv_backend:






  control-center:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - broker
    hostname: control-center
    container_name: control-center
    ports:
      - "9021:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: $BOOTSTRAP_SERVERS
    networks:
      compsrv_backend:

volumes:
  command_processor_db:
  query_processor_db:
  zookeeper_data:
  kafka_data:


networks:
  compsrv_backend: